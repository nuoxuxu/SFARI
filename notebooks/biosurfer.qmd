```{bash}
cd $SCRATCH
git clone https://github.com/sheynkman-lab/Long-Read-Proteogenomics.git
cd Long-Read-Proteogenomics
mamba create -n lrp nextflow=22.10.6
nextflow run main.nf --config conf/test_without_sqanti.config 
```

```{bash}
#| label: install-biosurfer
cd ~/tools
git clone https://github.com/sheynkman-lab/biosurfer
cd biosurfer
mamba create -n biosurfer -c conda-forge python graph-tool
pip install -e .
```

```{bash}
#| label: load-database
cd $SCRATCH/SFARI
biosurfer load_db -v -d SFARI --source=PacBio --gtf full_nt.fasta.transdecoder.genome_updated.gff3 --tx_fasta full_nt.fasta --tl_fasta full_nt.fasta.transdecoder_clean.pep --sqanti proc/merged_collapsed_classification.filtered_lite_classification.txt
```


```{python}
def read_gtf_line(line: str) -> list:
    """Read and parse a single gtf line

    Args:
        line (str): unbroken line of a gtf file

    Returns:
        list: gtf attributes
        chromosome : str
        source : str
        feature : str
        start : int
        stop : int
        score : str
        strand : str
        phase : str
        attributes: dict
        tags: list

    """
    chromosome, source, feature, start, stop, score, strand, phase, attributes = line.split('\t')
    start = int(start)
    stop = int(stop)
    attributes = attributes.split(';')[:-1]
    attributes = [att.strip(' ').split(' ') for att in attributes]
    tags = [att[1].strip('"') for att in attributes if att[0] == 'tag']
    attributes = {att[0]: att[1].strip('"') for att in attributes if att[0] != 'tag'}
    return chromosome, source, feature, start, stop, score, strand, phase, attributes, tags
```

```{python}
with open("full_nt.fasta.transdecoder.genome_updated.gff3", "r") as f:
    gtf = f.readlines()
```

```{python}
read_gtf_line(gtf[4])
```